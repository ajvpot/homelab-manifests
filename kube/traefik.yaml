apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    ingressRoute:
      dashboard:
        enabled: false
    
    deployment:
      kind: DaemonSet
      dnsPolicy: ClusterFirstWithHostNet
    
    # no load balancer
    service:
      enabled: false
    
    # use host network for directly port listening
    hostNetwork: true
    #service:
    #  spec:
    #    externalTrafficPolicy: Local
    securityContext:
      capabilities:
        add:
          - NET_BIND_SERVICE
      runAsNonRoot: false
      runAsUser: 0
    envFrom:
      - configMapRef:
          name: traefik-env
    ports:
      metrics:
        expose: true
        port: 9001
        exposedPort: 9001
      traefik:
        port: 9002
      web:
        port: 80
      websecure:
        port: 443
        tls:
          enabled: true
          #certResolver: letsencrypt
          domains:
            - main: vanderpot.net
              sans:
                - "*.vanderpot.net"
      #mqtt:
      #  expose: true
      #  exposedPort: 1883
      #  port: 1883
      #  protocol: TCP
    #persistence:
    #  enabled: true
    #  name: data
    #  path: /data
    #  storageClassName: local-path
    additionalArguments:
      - "--providers.kubernetescrd.allowexternalnameservices=true"
      - "--providers.kubernetescrd.allowcrossnamespace=true"
      - "--providers.kubernetesingress.allowexternalnameservices=true"    
      - "--serverstransport.insecureskipverify=true"
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: authentik
  namespace: kube-system
spec:
  repo: https://charts.goauthentik.io
  chart: authentik
  targetNamespace: default
  valuesContent: |-
    authentik:
      email:
        host: email-smtp.us-west-2.amazonaws.com
        port: 465
        use_ssl: true
        from: sso@vanderpot.com
    ingress:
      enabled: true
      hosts:
        - host: apps.vanderpot.net
          paths:
            - path: "/"
              pathType: Prefix
    postgresql:
      enabled: true
      persistence:
        data:
          enabled: true
          storageClass: local-path
    redis:
      enabled: true
    env:
      AUTHENTIK_DEFAULT_USER_CHANGE_USERNAME: false
      AUTHENTIK_FOOTER_LINKS: '[{"href": "about:blank","name": ""}]'
    affinity: &aff
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - nixkube
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: secured
spec:
  chain:
    middlewares:
      - name: https-only
      - name: auth
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-only
  namespace: default
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: auth
  namespace: default
spec:
  forwardAuth:
    address: http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/akprox/auth/traefik
    trustForwardHeader: true
    authResponseHeaders:
      - X-authentik-username
      - X-authentik-groups
      - X-authentik-email
      - X-authentik-name
      - X-authentik-uid
      - X-authentik-jwt
      - X-authentik-meta-jwks
      - X-authentik-meta-outpost
      - X-authentik-meta-provider
      - X-authentik-meta-app
      - X-authentik-meta-version
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: cert-manager
  namespace: kube-system
spec:
  repo: https://charts.jetstack.io
  chart: cert-manager
  targetNamespace: kube-system
  valuesContent: |-
    installCRDs: true
    prometheus:
      servicemonitor:
        enabled: true
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  namespace: kube-system
spec:
  acme:
    email: alex@vanderpot.com
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: le-staging-account-key
    solvers:
      - dns01:
          cloudflare:
            email: alexjvanderpotwebdesign@gmail.com
            apiTokenSecretRef:
              name: cloudflare-api-token-secret
              key: api-token
        selector:
          dnsNames:
            - 'vanderpot.net'
            - '*.vanderpot.net'
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
  namespace: kube-system
spec:
  acme:
    email: alex@vanderpot.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: le-account-key
    solvers:
      - dns01:
          cloudflare:
            email: alexjvanderpotwebdesign@gmail.com
            apiTokenSecretRef:
              name: cloudflare-api-token-secret
              key: api-token
        selector:
          dnsNames:
            - 'vanderpot.net'
            - '*.vanderpot.net'
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vanderpot-net
  namespace: default
spec:
  secretName: vanderpot-net-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  dnsNames:
    - vanderpot.net
    - '*.vanderpot.net'
---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: traefikmonitor
  namespace: kube-system
  labels:
    release: prometheus
    app: prometheus-traefik
spec:
  endpoints:
    - path: /metrics
      port: metrics
  jobLabel: traefik-metrics
  namespaceSelector:
    matchNames:
      - kube-system
  selector:
    matchLabels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/name: traefik

